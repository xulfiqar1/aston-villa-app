Parameters:
  Environment:
    Description: 'Environment name for CF stack. Defaults to 'dev''
    Default: dev
    Type: String
    AllowedValues:
      - dev
      - stg 
      - uat 
      - prod 
  ServiceName:
    Description: Service Name 
    Default: $PROJECT_NAME
    Type: String 

Resources:

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ServiceName}-codebuild-service-role-${Environment}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com

  CodeBuildServicePolicy:
  Type: AWS::IAM::Policy
  Properties:
    PolicyName: !Sub ${ServiceName}-CodeBuildServicePolicy-${Environment}
  Roles:
    - !Ref CodeBuildServiceRole
  PolicyDocument:
    Version: 2012-10-17
    Statement:
      - Effect: Allow
        Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
        Resource: "arn:aws:logs:*:*:*"
      - Effect: Allow
        Action:
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:PutObject
          - s3:GetBucketAcl
          - s3:GetBucketLocation
        Resource:
          - !Sub "arn:aws:s3:::codepipeline-${AWS::Region}-*/*"
      - Effect: Allow
        Action:
          - codecommit:GitPull
        Resource: !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${ServiceName}"
      - Effect: Allow
        Action:
          - ecr:GetAuthorizationToken
          - ecr:BatchCheckLayerAvailability
          - ecr:GetDownloadUrlForLayer
          - ecr:BatchGetImage
          - ecr:CompleteLayerUpload
          - ecr:InitiateLayerUpload
          - ecr:PutImage
          - ecr:UploadLayerPart
        Resource: "*"
      - Effect: Allow
        Action:
          - ecs:RegisterTaskDefinition
        Resource: "*"
      - Effect: Allow
        Action:
          - codebuild:CreateReportGroup
          - codebuild:CreateReport
          - codebuild:UpdateReport
          - codebuild:BatchPutTestCases
        Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${ServiceName}-${Environment}-*"
      - Effect: Allow
        Action:
          - iam:PassRole
        Resource: !GetAtt CodeBuildServiceRole.Arn
      - Effect: Allow
        Action:
          - ec2:DescribeSecurityGroups
          - ec2:DescribeVpcs
          - ec2:DescribeSubnets
          - ec2:DescribeNetworkInterfaces
          - ec2:DeleteNetworkInterface
          - ec2:CreateNetworkInterface
          - ec2:DescribeDhcpOptions
        Resource: "*"
      - Effect: Allow
        Action:
          - ec2:CreateNetworkInterfacePermission
        Resource: !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*"
        Condition:
          StringLike:
            ec2:Subnet:
              - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*"
                ec2:AuthorizedService: codebuild.amazonaws.com
  CodeBuildProject:
  Type: AWS::CodeBuild::Project
  Properties:
  Name: !Sub ${ServiceName}-${Environment}
  ServiceRole: !GetAtt CodeBuildServiceRole.Arn
  Artifacts:
    Type: NO_ARTIFACTS
  Environment:
    Type: linuxContainer
    ComputeType: BUILD_GENERAL1_SMALL
    Image: aws/codebuild/standard:2.0
    PrivilegedMode: true
    EnvironmentVariables:
      - Name: CURRENT_ENV
        Type: PLAINTEXT
        Value: !Ref Environment
      - Name: ACCOUNT_ID
        Type: PLAINTEXT
        Value: !Ref 'AWS::AccountId'
      - Name: SERVICE_NAME
        Type: PLAINTEXT
        Value: !Ref ServiceName
    Source:
      #Type: CODECOMMIT
      #Location: !Sub https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${ServiceName}
      Auth:
          Type: OAUTH
      Type: GITHUB
      Location: https://github.com/xulfiqar1/aston-villa-app
    SourceVersion: refs/heads/master
    TimeoutInMinutes: 10

